#edit_modal.fixed.inset-0.flex.items-center.justify-center.z-50.bg-black.bg-opacity-50.transition-opacity.duration-300.ease-in-out.opacity-0.pointer-events-none
  #modal_content.bg-white.rounded-lg.shadow-lg.w-full.max-w-4xl.flex.flex-col.transform.transition-all.duration-300.scale-95.opacity-0(
    class='max-h-[90vh]'
  )
    // Header section (fixed)
    .px-8.py-6.border-b
      h2.text-2xl.font-bold #{ t('title.edit_exam') }

    // Scrollable content
    .px-8.py-6.flex-1.overflow-y-auto.p-6.scrollbar-hide(
      style=`
        scrollbar-width: none;
        -ms-overflow-style: none;
        &::-webkit-scrollbar {
          display: none;
        }
      `
    )
      form#edit_form.space-y-6(
        method='POST',
        action=`/courses/${courseID}/exam/${exam.id}/update`
      )
        // Name Field
        .space-y-2
          label.block.font-medium.text-gray-900(for='name') Exam Title
          input#name.mt-1.block.w-full.rounded-md.border.p-2.shadow-sm.transition.duration-150.ease-in-out(
            type='text',
            name='name',
            required,
            placeholder='Enter exam title',
            value=exam === undefined ? '' : exam.name,
            class='focus:border-blue-500 focus:ring-blue-500 sm:text-sm'
          )
          p.text-sm.text-gray-500.mt-1 Choose a clear and descriptive title for your exam

        // Description Field
        .space-y-2
          label.block.font-medium.text-gray-900(for='description') Description
          textarea#description.mt-1.block.w-full.rounded-md.border.p-2.shadow-sm.transition.duration-150.ease-in-out(
            name='description',
            rows='4',
            placeholder='Provide exam details, instructions, or additional information',
            class='focus:border-blue-500 focus:ring-blue-500 sm:text-sm'
          ) #{ exam===undefined ? '' : exam.description }

        // Deadline Field
        .space-y-2
          label.block.font-medium.text-gray-900(for='deadline') Submission Deadline
          input#deadline.mt-1.block.w-full.rounded-md.border.p-2.shadow-sm.transition.duration-150.ease-in-out(
            type='datetime-local',
            name='deadline',
            value=exam === undefined ? '' : new Date(new Date(exam.deadline).getTime() - new Date().getTimezoneOffset() * 60000).toISOString().slice(0, 16),
            class='focus:border-blue-500 focus:ring-blue-500 sm:text-sm'
          )
          p.text-sm.text-gray-500.mt-1 Students must complete the exam before this deadline

        // Time Limit Field
        .space-y-2
          label.block.font-medium.text-gray-900(for='timeLimit') Time Limit
          .mt-1.relative.rounded-md.shadow-sm
            input#timeLimit.block.w-full.rounded-md.border.p-2.shadow-sm.transition.duration-150.ease-in-out(
              type='number',
              name='timeLimit',
              min='1',
              placeholder='60',
              value=exam === undefined ? '' : exam.time_limit,
              class='focus:border-blue-500 focus:ring-blue-500 sm:text-sm'
            )
            .absolute.inset-y-0.right-0.pr-3.flex.items-center.pointer-events-none
              span.text-gray-500.pr-4(class='sm:text-sm') minutes
          p.text-sm.text-gray-500.mt-1 Maximum time allowed for this exam

        // Attempt Limit Field
        .space-y-2
          label.block.font-medium.text-gray-900(for='attemptLimit') Maximum Attempts
          input#attemptLimit.mt-1.block.w-full.rounded-md.border.p-2.shadow-sm.transition.duration-150.ease-in-out(
            type='number',
            name='attemptLimit',
            min='1',
            placeholder='1',
            value=exam === undefined ? '' : exam.attempt_limit,
            class='focus:border-blue-500 focus:ring-blue-500 sm:text-sm'
          )
          p.text-sm.text-gray-500.mt-1 Number of times students can attempt this exam

    // Footer section (fixed)
    .px-8.py-6.border-t
      .flex.justify-end.items-center.space-x-2
        button.inline-block.font-bold.text-sm.text-white.bg-red-500.py-2.px-4.rounded(
          class='hover:bg-red-600',
          type='button',
          onclick='hideModal("edit_modal")'
        ) Cancel

        button.inline-block.bg-green-500.text-sm.text-white.font-bold.py-2.px-4.rounded(
          class='hover:bg-green-600 disabled:opacity-50 disabled:cursor-not-allowed',
          type='submit',
          form='edit_form'
        ) Save
