services:
  db:
    container_name: smart_education_db
    image: mysql:latest
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    expose:
      - ${DB_PORT}
    entrypoint: sh -c "/usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci"
    volumes:
      - db_volume:/var/lib/mysql
      - ./src/sql/e_learning.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - internal
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 20s
      timeout: 10s
      retries: 5

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin-container
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '8080:80'
    environment:
      PMA_HOST: db
    networks:
      - internal

  web:
    container_name: smart_education_web
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      phpmyadmin:
        condition: service_started
    environment: # override environment variables
      NODE_ENV: production
      DB_HOST: db
      DB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    links:
      - db
      - phpmyadmin
    volumes:
      - web_volume:/app
      - node_volume:/app/node_modules
    networks:
      - internal

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - '80:80'
    environment:
      DOMAIN: ${DOMAIN}
      PORT: ${PORT}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/templates:/etc/nginx/templates
    depends_on:
      web:
        condition: service_started
    networks:
      - internal

volumes:
  db_volume:
  web_volume:
  node_volume:

networks:
  internal:
    driver: bridge
